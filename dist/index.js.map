{"version":3,"file":"index.js","sources":["../src/event-dispatcher.js","../src/broadcast-polyfill.js","../src/browserbase.js"],"sourcesContent":["const slice = Array.prototype.slice;\n\n/**\n * Simple event dispatcher\n */\nexport default class EventDispatcher {\n\n  constructor() {\n    // Define a non-enumerable \"private\" property to hold all event listeners\n    Object.defineProperty(this, '_events', { configurable: true, writable: true, value: {} });\n  }\n\n  /**\n   * Adds an event listener\n   */\n  on(type, listener) {\n    this._events[type] = getEventListeners(this, type).concat([listener]);\n    return this;\n  }\n\n  /**\n   * Adds an event listener to be triggered only once\n   */\n  once(type, listener) {\n    this.on(type, function wrap() {\n      this.off(type, wrap);\n      listener.apply(this, arguments);\n    });\n    return this;\n  }\n\n  /**\n   * Removes a previously added event listener\n   */\n  off(type, listener) {\n    this._events[type] = getEventListeners(this, type).filter(function(l) {\n      return l !== listener;\n    });\n    return this;\n  }\n\n  /**\n   * Checks if there are any event listeners for this event\n   */\n  hasListeners(type) {\n    return getEventListeners(this, type).length > 0;\n  }\n\n  /**\n   * Dispatches an event calling all listeners with the given args (minus type).\n   */\n  dispatchEvent(type /*[, args]*/) {\n    var args = slice.call(arguments, 1);\n    getEventListeners(this, type).forEach(function(listener) {\n      listener.apply(this, args);\n    }, this);\n    return this;\n  }\n\n  /**\n   * Dispatches an event but stops on the first listener to return false. Returns true if no listeners cancel the\n   * action. Use for \"cancelable\" actions to check if they can be performed.\n   */\n  dispatchCancelableEvent(type /*[, args]*/) {\n    var args = slice.call(arguments, 1);\n    return getEventListeners(this, type).every(function(listener) {\n      return listener.apply(this, args) !== false;\n    }, this);\n  }\n\n  removeAllEvents() {\n    this._events = {};\n  }\n}\n\n\n/**\n * Get the listeners for the given object by the given event type.\n */\nfunction getEventListeners(obj, type) {\n  var listeners = obj._events[type];\n  if (!listeners) {\n    obj._events[type] = listeners = [];\n  }\n  return listeners;\n}\n","// From https://github.com/JSmith01/broadcastchannel-polyfill/blob/master/index.js\n// with modification for Safari which dispatches storage in tab that set data\n(function(global) {\n  var channels = [];\n\n  function BroadcastChannel(channel) {\n      var $this = this;\n      channel = String(channel);\n\n      var id = '$BroadcastChannel$' + channel + '$';\n\n      channels[id] = channels[id] || [];\n      channels[id].push(this);\n\n      this._name = channel;\n      this._id = id;\n      this._closed = false;\n      this._mc = new MessageChannel();\n      this._mc.port1.start();\n      this._mc.port2.start();\n      this._keys = {};\n\n      global.addEventListener('storage', function(e) {\n          if (e.storageArea !== global.localStorage) return;\n          if (e.newValue == null || e.newValue === '') return;\n          if (e.key.substring(0, id.length) !== id) return;\n          if ($this._keys[e.key]) return; // Safari fix, dispatches to own tab\n          var data = JSON.parse(e.newValue);\n          $this._mc.port2.postMessage(data);\n      });\n  }\n\n  BroadcastChannel.prototype = {\n      // BroadcastChannel API\n      get name() {\n          return this._name;\n      },\n      postMessage: function(message) {\n          var $this = this;\n          if ($this._closed) {\n              var e = new Error();\n              e.name = 'InvalidStateError';\n              throw e;\n          }\n          var value = JSON.stringify(message);\n\n          // Broadcast to other contexts via storage events...\n          var key = $this._id + String(Date.now()) + '$' + String(Math.random());\n          $this._keys[key] = true;\n          global.localStorage.setItem(key, value);\n          setTimeout(function() {\n              global.localStorage.removeItem(key);\n              delete $this._keys[key];\n          }, 500);\n\n          // Broadcast to current context via ports\n          channels[$this._id].forEach(function(bc) {\n              if (bc === $this) return;\n              bc._mc.port2.postMessage(JSON.parse(value));\n          });\n      },\n      close: function() {\n          if (this._closed) return;\n          this._closed = true;\n          this._mc.port1.close();\n          this._mc.port2.close();\n\n          var index = channels[this._id].indexOf(this);\n          channels[this._id].splice(index, 1);\n      },\n\n      // EventTarget API\n      get onmessage() {\n          return this._mc.port1.onmessage;\n      },\n      set onmessage(value) {\n          this._mc.port1.onmessage = value;\n      },\n      addEventListener: function(/*type, listener , useCapture*/) {\n          return this._mc.port1.addEventListener.apply(this._mc.port1, arguments);\n      },\n      removeEventListener: function(/*type, listener , useCapture*/) {\n          return this._mc.port1.removeEventListener.apply(this._mc.port1, arguments);\n      },\n      dispatchEvent: function(/*event*/) {\n          return this._mc.port1.dispatchEvent.apply(this._mc.port1, arguments);\n      },\n  };\n\n  if (!global.BroadcastChannel) global.BroadcastChannel = BroadcastChannel;\n})(self);\n","import './broadcast-polyfill';\nimport EventDispatcher from './event-dispatcher';\nconst maxString = String.fromCharCode(65535);\nconst noop = data => data;\n\n\n/**\n * A nice promise-based syntax on indexedDB also providing events when open, closed, and whenever data is changed.\n * Dispatches the change events even when the change did not originate in this browser tab.\n *\n * Versioning is simplified. You provide a string of new indexes for each new version, with the first being the primary\n * key. For primary keys, use a \"++\" prefix to indicate auto-increment, leave it empty if the key isn't part of the\n * object. For indexes, use a \"-\" index to delete a defined index, use \"&\" to indicate a unique index, use \"*\" for a\n * multiEntry index, and use \"[field + anotherField]\" for compound indexes. Examples:\n *\n * // Initial version, should remain the same with updates\n * db.version(1, {\n *   friends: 'fullName, age'\n * });\n *\n * // Next version, we don't add any indexes, but we want to run our own update code to prepopulate the database\n * db.version(2, {}, function(oldVersion, transaction) {\n *   // prepopulate with some initial data\n *   transaction.objectStore('friends').put({ fullName: 'Tom' });\n * });\n *\n * // Remove the age index and add one for birthdate, add another object store with an auto-incrementing primary key\n * // that isn't part of the object, and a multiEntry index on the labels array.\n * db.version(3, {\n *   friends: 'birthdate, -age, [lastName + firstName]',\n *   events: '++, date, *labels'\n * });\n *\n *\n * After the database is opened, a property will be added to the database instance for each object store in the\n * database. This is how you will work with the data in the database. For e.g.\n *\n * db.version(1, { foo: 'id' });\n *\n * // Will be triggered once for any add, put, or delete done in any browser tab. The object will be null when it was\n * // deleted, so use the key when object is null.\n * db.on('change', (object, key) => {\n *   console.log('Object with key', key, 'was', object === null ? 'deleted' : 'saved');\n * });\n *\n * db.open().then(() => {\n *   db.foo.put({ id: 'bar' }).then(() => {\n *     console.log('An object was saved to the database.');\n *   });\n * }, err => {\n *   console.warn('There was an error opening the database:', err);\n * });\n */\nexport default class Browserbase extends EventDispatcher {\n\n  /**\n   * Deletes a database by name.\n   * @return {Promise}\n   */\n  static deleteDatabase(name) {\n    return requestToPromise(indexedDB.deleteDatabase(name));\n  }\n\n  /**\n   * Creates a new indexeddb database with the given name.\n   * @param  {String} name           The name of the database, stored in IndexedDB\n   * @param  {Object} options        Options for this database.\n   * @param           {Boolean} dontDispatch      If true, don't dispatch events across contexts.\n   * @param  {Browserbase} parent    The parent database, if this is a transaction\n   */\n  constructor(name, options, parent) {\n    super();\n    this.name = name;\n    this.db = null;\n    this.options = options || {};\n    this._dispatchRemote = false;\n    this._current = null;\n    this._versionMap = {};\n    this._versionHandlers = {};\n    this._channel = null;\n    this.parent = parent;\n  }\n\n  /**\n   * Defines a version for the database. Additional versions may be added, but existing version should not be changed.\n   * @param  {Number} version           The version number\n   * @param  {Object} stores            An object with store name as the key and a comma-delimited string of indexes\n   * @param  {Function} upgradeFunction An optional function that will be called when upgrading, used for data updates\n   * @return {Browserbase}              A reference to itself\n   */\n  version(version, stores, upgradeFunction) {\n    this._versionMap[version] = stores;\n    if (upgradeFunction) {\n      this._versionHandlers[version] = upgradeFunction;\n    }\n    return this;\n  }\n\n  /**\n   * Returns a list of the defined versions.\n   */\n  getVersions() {\n    return Object.keys(this._versionMap).map(key => {\n      return { version: parseInt(key), stores: this._versionMap[key], upgradeFunction: this._versionHandlers[key] };\n    });\n  }\n\n  /**\n   * Whether this database is open or closed.\n   * @return {Boolean}\n   */\n  isOpen() {\n    return Boolean(this.db);\n  }\n\n  /**\n   * Open a database, call this after defining versions.\n   * @return {Promise}\n   */\n  open() {\n    if (this._opening) {\n      return this._opening;\n    }\n\n    if (!Object.keys(this._versionMap).length) {\n      return Promise.reject(new Error('Must declare at least a version 1 schema for Browserbase'));\n    }\n\n    let version = Object.keys(this._versionMap).map(key => parseInt(key)).sort((a, b) => a - b).pop();\n    let upgradedFrom = null;\n\n    return this._opening = new Promise((resolve, reject) => {\n      let request = indexedDB.open(this.name, version);\n      request.onsuccess = successHandler(resolve);\n      request.onerror = errorHandler(reject, this);\n      request.onupgradeneeded = event => {\n        this.db = request.result;\n        this.db.onerror = errorHandler(reject, this);\n        this.db.onabort = errorHandler(() => reject(new Error('Abort')), this);\n        let oldVersion = event.oldVersion > Math.pow(2, 62) ? 0 : event.oldVersion; // Safari 8 fix.\n        upgradedFrom = oldVersion;\n        upgrade(oldVersion, request.transaction, this.db, this._versionMap, this._versionHandlers, this);\n      };\n    }).then(db => {\n      this.db = db;\n      onOpen(this);\n      if (upgradedFrom === 0) this.dispatchEvent('create');\n      else if (upgradedFrom) this.dispatchEvent('upgrade', upgradedFrom);\n      this.dispatchEvent('open');\n    });\n  }\n\n  /**\n   * Closes the database.\n   */\n  close() {\n    if (!this.db) return;\n    this.db.close();\n    this._opening = undefined;\n    onClose(this);\n  }\n\n  /**\n   * Deletes this database.\n   */\n  deleteDatabase() {\n    this.close();\n    return Browserbase.deleteDatabase(this.name);\n  }\n\n  /**\n   * Starts a multi-store transaction. All store methods on the returned database clone will be part of this transaction\n   * until the next tick or until calling db.commit().\n   * @param  {Array} storeNames  Array of all the store names which will be used within this transaction\n   * @param  {String} mode       The mode, defaults to readwrite unlike the indexedDB API\n   * @return {BrowserDB}         A temporary copy of BrowserDB to be used for this transaction only\n   */\n  start(storeNames, mode = 'readwrite') {\n    if (!storeNames) storeNames = this.db.objectStoreNames;\n    if (this._current) throw new Error('Cannot start a new transaction on an existing transaction browserbase');\n\n    const db = new this.constructor(this.name, this.options, this);\n    db.db = this.db;\n    db._channel = this._channel;\n    Object.keys(this).forEach(key => {\n      const store = this[key];\n      if (!(store instanceof ObjectStore)) return;\n      db[key] = new ObjectStore(db, store.name, store.keyPath);\n      db[key].store = store.store;\n      db[key].revive = store.revive;\n    });\n\n    try {\n      const trans = db._current = storeNames instanceof IDBTransaction\n        ? storeNames\n        : this.db.transaction(safariMultiStoreFix(storeNames), mode);\n      trans.promise = requestToPromise(trans, null, db).then(result => {\n        if (db._current === trans) db._current = null;\n        return result;\n      }, err => {\n        if (db._current === trans) db._current = null;\n        this.dispatchEvent('error', err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      Promise.resolve().then(() => {\n        this.dispatchEvent('error', err);\n      });\n      throw err;\n    }\n\n    return db;\n  }\n\n  /**\n   * Finishes a started transaction so that other transactions may be run. This is not needed for a transaction to run,\n   * but it allows other transactions to be run in this thread. It ought to be called to avoid conflicts with other\n   * code elsewhere.\n   * @return {Promise} The same promise returned by start() which will resolve once the transaction is done.\n   */\n  commit(options) {\n    if (!this._current) throw new Error('There is no current transaction to commit.');\n    const promise = this._current.promise;\n    if (options && options.remoteChange) {\n      this._dispatchRemote = true;\n      promise.then(() => this._dispatchRemote = false);\n    }\n    this._current = null;\n    return promise;\n  }\n\n  /**\n   * Dispatches a change event when an object is being added, saved, or deleted. When deleted, the object will be null.\n   * @param {ObjectStore} store  The object store this object is stored in\n   * @param {Object}      obj    The object being modified or null if the object is deleted\n   * @param {mixed}       key    The key of the object being changed or deleted\n   * @param {String}      from   The source of this event, whether it was from the 'local' scope or a 'remote' scope\n   */\n  dispatchChange(store, obj, key, from = 'local', dispatchRemote = false) {\n    const declaredFrom = this._dispatchRemote || dispatchRemote ? 'remote' : from;\n    this[store.name].dispatchEvent('change', obj, key, declaredFrom);\n    this.dispatchEvent('change', store.name, obj, key, declaredFrom);\n\n    if (from === 'local' && this._channel) {\n      postMessage(this, { path: `${store.name}/${key}`, obj });\n    }\n  }\n\n  /**\n   * Dispatch an error event.\n   */\n  dispatchError(err) {\n    this.dispatchEvent('error', err);\n  }\n\n  /**\n   * Creates or updates a store with the given indexesString. If null will delete the store.\n   * @param  {String} storeName     The store name\n   * @param  {String} indexesString The string definition of the indexes to add to the store\n   * @return {Promise}           Resolves with an array which is the return result of each iteration\n   */\n  upgradeStore(storeName, indexesString) {\n    if (!this._current) return this.start().upgradeStore(storeName, indexesString);\n    upgradeStore(this.db, this._current, storeName, indexesString);\n  }\n\n}\n\n\n/**\n * An abstraction on object stores, allowing to more easily work with them without needing to always explicitly create a\n * transaction first. Also helps with ranges and indexes and promises.\n */\nclass ObjectStore extends EventDispatcher {\n\n  constructor(db, name, keyPath) {\n    super();\n    this.db = db;\n    this.name = name;\n    this.keyPath = keyPath;\n    this.store = noop;\n    this.revive = noop;\n  }\n\n  _transStore(mode) {\n    if (!this.db._current && !this.db.db) {\n      throw new Error('Database is not opened');\n    }\n    try {\n      let trans = this.db._current || this.db.db.transaction(this.name, mode);\n      return trans.objectStore(this.name);\n    } catch (err) {\n      Promise.resolve().then(() => {\n        this.db.dispatchEvent('error', err);\n      });\n      throw err;\n    }\n  }\n\n  /**\n   * Dispatches a change event.\n   */\n  dispatchChange(obj, key) {\n    this.db.dispatchChange(this, obj, key);\n  }\n\n  /**\n   * Dispatch an error event.\n   */\n  dispatchError(err) {\n    this.db.dispatchError(err);\n  }\n\n  /**\n   * Get an object from the store by its primary key\n   * @param  {mixed} id The key of the object being retreived\n   * @return {Promise}  Resolves with the object being retreived\n   */\n  get(key) {\n    return requestToPromise(this._transStore('readonly').get(key), null, this).then(this.revive);\n  }\n\n  /**\n   * Get all objects in this object store. To get only a range, use where()\n   * @return {Promise} Resolves with an array of objects\n   */\n  getAll() {\n    return requestToPromise(this._transStore('readonly').getAll(), null, this)\n      .then(results => results.map(this.revive));\n  }\n\n  /**\n   * Gets the count of all objects in this store\n   * @return {Promise} Resolves with a number\n   */\n  count() {\n    return requestToPromise(this._transStore('readonly').count(), null, this);\n  }\n\n  /**\n   * Adds an object to the store. If an object with the given key already exists, it will not overwrite it.\n   * @param {Object} obj The object you want to add to the store\n   * @param {mixed} key Optional, the key of the object when it is not part of the object fields\n   * @return {Promise}\n   */\n  add(obj, key) {\n    let store = this._transStore('readwrite');\n    return requestToPromise(store.add(this.store(obj), key), store.transaction, this).then(key => {\n      this.dispatchChange(obj, key);\n      return key;\n    });\n  }\n\n  /**\n   * Adds an array of objects to the store in once transaction. You can also call startTransaction and use add().\n   * @param {Array} array The array of objects you want to add to the store\n   * @return {Promise}\n   */\n  addAll(array) {\n    let store = this._transStore('readwrite');\n    return Promise.all(array.map(obj => {\n      return requestToPromise(store.add(this.store(obj)), store.transaction, this).then(key => {\n        this.dispatchChange(obj, key);\n      });\n    }));\n  }\n\n  /**\n   * Adds an array of objects to the store in once transaction. You can also call startTransaction and use add(). Alias\n   * of addAll().\n   * @param {Array} array The array of objects you want to add to the store\n   * @return {Promise}\n   */\n  bulkAdd(array) {\n    return this.addAll(array);\n  }\n\n  /**\n   * Saves an object to the store. If an object with the given key already exists, it will overwrite it.\n   * @param {Object} obj The object you want to add to the store\n   * @param {mixed} key Optional, the key of the object when it is not part of the object fields\n   * @return {Promise}\n   */\n  put(obj, key) {\n    let store = this._transStore('readwrite');\n    return requestToPromise(store.put(this.store(obj), key), store.transaction, this).then(key => {\n      this.dispatchChange(obj, key);\n      return key;\n    });\n  }\n\n  /**\n   * Saves an array of objects to the store in once transaction. You can also call startTransaction and use put().\n   * @param {Array} array The array of objects you want to save to the store\n   * @return {Promise}\n   */\n  putAll(array) {\n    let store = this._transStore('readwrite');\n    return Promise.all(array.map(obj => {\n      return requestToPromise(store.put(this.store(obj)), store.transaction, this).then(key => {\n        this.dispatchChange(obj, key);\n      });\n    }));\n  }\n\n  /**\n   * Saves an array of objects to the store in once transaction. You can also call startTransaction and use put(). Alias\n   * of putAll().\n   * @param {Array} array The array of objects you want to save to the store\n   * @return {Promise}\n   */\n  bulkPut(array) {\n    return this.putAll(array);\n  }\n\n  /**\n   * Deletes an object from the store.\n   * @param {mixed} key The key of the object to delete.\n   * @return {Promise}\n   */\n  delete(key) {\n    let store = this._transStore('readwrite');\n    return requestToPromise(store.delete(key), store.transaction, this).then(() => {\n      this.dispatchChange(null, key);\n    });\n  }\n\n  /**\n   * Deletes all objects from a store.\n   * @return {Promise}\n   */\n  deleteAll() {\n    return this.where().deleteAll();\n  }\n\n  /**\n   * Use to get a subset of items from the store by id or index. Returns a Where object to allow setting the range and\n   * limit.\n   * @param  {String} index The key or index that will be used to retreive the range of objects\n   * @return {Where}        A Where instance associated with this object store\n   */\n  where(index = '') {\n    index = index.replace(/\\s/g, '');\n    return new Where(this, index === this.keyPath ? '' : index);\n  }\n}\n\n\n/**\n * Helps with a ranged getAll or openCursor by helping to create the range and providing a nicer API with returning a\n * promise or iterating through with a callback.\n */\nclass Where {\n  constructor(store, index) {\n    this.store = store;\n    this.index = index;\n    this._upper = undefined;\n    this._lower = undefined;\n    this._upperOpen = false;\n    this._lowerOpen = false;\n    this._value = undefined;\n    this._limit = undefined;\n    this._direction = 'next';\n  }\n\n  /**\n   * Dispatches a change event.\n   */\n  dispatchChange(obj, key) {\n    this.store.dispatchChange(obj, key);\n  }\n\n  /**\n   * Dispatch an error event.\n   */\n  dispatchError(err) {\n    this.store.dispatchError(err);\n  }\n\n  /**\n   * Set greater than the value provided.\n   * @param  {mixed} value The lower bound\n   * @return {Where}       Reference to this\n   */\n  startsAfter(value) {\n    this._lower = value;\n    this._lowerOpen = true;\n    return this;\n  }\n\n  /**\n   * Set greater than or equal to the value provided.\n   * @param  {mixed} value The lower bound\n   * @return {Where}       Reference to this\n   */\n  startsAt(value) {\n    this._lower = value;\n    this._lowerOpen = false;\n    return this;\n  }\n\n  /**\n   * Set less than the value provided.\n   * @param  {mixed} value The upper bound\n   * @return {Where}       Reference to this\n   */\n  endsBefore(value) {\n    this._upper = value;\n    this._upperOpen = true;\n    return this;\n  }\n\n  /**\n   * Set less than or equal to the value provided.\n   * @param  {mixed} value The upper bound\n   * @return {Where}       Reference to this\n   */\n  endsAt(value) {\n    this._upper = value;\n    this._upperOpen = false;\n    return this;\n  }\n\n  /**\n   * Set the exact match, no range.\n   * @param  {mixed} value The value that needs matching on\n   * @return {Where}       Reference to this\n   */\n  equals(value) {\n    this._value = value;\n    return this;\n  }\n\n  /**\n   * Sets the upper and lower bounds to match any string starting with this prefix.\n   * @param  {String} prefix The string prefix\n   * @return {Where}         Reference to this\n   */\n  startsWith(prefix) {\n    return this.startsAt(prefix).endsAt(Array.isArray(prefix) ? prefix.concat([[]]) : prefix + maxString);\n  }\n\n  /**\n   * Limit the return results to the given count.\n   * @param  {Number} count The max number of objects to return\n   * @return {Where}        Reference to this\n   */\n  limit(count) {\n    this._limit = count;\n    return this;\n  }\n\n  /**\n   * Reverses the direction a cursor will get things.\n   * @return {Where} Reference to this\n   */\n  reverse() {\n    this._direction = 'prev';\n    return this;\n  }\n\n  /**\n   * Converts this Where to its IDBKeyRange equivalent.\n   * @return {IDBKeyRange} The range this Where represents\n   */\n  toRange() {\n    if (this._upper !== undefined && this._lower !== undefined) {\n      return IDBKeyRange.bound(this._lower, this._upper, this._lowerOpen, this._upperOpen);\n    } else if (this._upper !== undefined) {\n      return IDBKeyRange.upperBound(this._upper, this._upperOpen);\n    } else if (this._lower !== undefined) {\n      return IDBKeyRange.lowerBound(this._lower, this._lowerOpen);\n    } else if (this._value !== undefined) {\n      return IDBKeyRange.only(this._value);\n    }\n  }\n\n  /**\n   * Get all the objects matching the range limited by the limit.\n   * @return {Promise} Resolves with an array of objects\n   */\n  getAll() {\n    let range = this.toRange();\n    // Handle reverse with cursor\n    if (this._direction === 'prev') {\n      let results = [];\n      if (this._limit <= 0) return Promise.resolve(results);\n      return this.forEach(obj => results.push(this.store.revive(obj))).then(() => results);\n    }\n\n    let store = this.store._transStore('readonly');\n    let source = this.index ? store.index(this.index) : store;\n    return requestToPromise(source.getAll(range, this._limit), null, this)\n      .then(results => results.map(this.store.revive));\n  }\n\n  /**\n   * Get all the keys matching the range limited by the limit.\n   * @return {Promise} Resolves with an array of objects\n   */\n  getAllKeys() {\n    let range = this.toRange();\n    // Handle reverse with cursor\n    if (this._direction === 'prev') {\n      let results = [];\n      if (this._limit <= 0) return Promise.resolve(results);\n      return this.cursor(cursor => results.push(cursor.key), 'readonly', true).then(() => results);\n    }\n\n    let store = this.store._transStore('readonly');\n    let source = this.index ? store.index(this.index) : store;\n    return requestToPromise(source.getAllKeys(range, this._limit), null, this);\n  }\n\n  /**\n   * Gets a single object, the first one matching the criteria\n   * @return {Promise} Resolves with an object or undefined if none was found\n   */\n  get() {\n    return this.limit(1).getAll().then(result => this.store.revive(result[0]));\n  }\n\n  /**\n   * Gets a single key, the first one matching the criteria\n   * @return {Promise} Resolves with an object or undefined if none was found\n   */\n  getKey() {\n    // Allow reverse() to be used by going through the getAllKeys method\n    return this.limit(1).getAllKeys().then(result => result[0]);\n  }\n\n  /**\n   * Gets the count of the objects matching the criteria\n   * @return {Promise} Resolves with a number\n   */\n  count() {\n    let range = this.toRange();\n    let store = this.store._transStore('readonly');\n    let source = this.index ? store.index(this.index) : store;\n    return requestToPromise(source.count(range), null, this);\n  }\n\n  /**\n   * Deletes all the objects within this range.\n   * @return {Promise} Resolves without result when finished\n   */\n  deleteAll() {\n    // Uses a cursor to delete so that each item can get a change event dispatched for it\n    return this.map((object, cursor, trans) => {\n      let key = cursor.primaryKey;\n      return requestToPromise(cursor.delete(), trans, this).then(() => {\n        this.dispatchChange(null, key);\n      });\n    }, 'readwrite').then(promises => Promise.all(promises)).then(() => {});\n  }\n\n  /**\n   * Uses a cursor to efficiently iterate over the objects matching the range calling the iterator for each one.\n   * @param  {Function} iterator A function which will be called for each object with the (object, cursor) signature\n   * @return {Promise}           Resolves without result when the cursor has finished\n   */\n  cursor(iterator, mode = 'readonly', keyCursor = false) {\n    return new Promise((resolve, reject) => {\n      let range = this.toRange();\n      let store = this.store._transStore(mode);\n      let source = this.index ? store.index(this.index) : store;\n      let method = keyCursor ? 'openKeyCursor' : 'openCursor'\n      let request = source[method](range, this._direction);\n      let count = 0;\n      request.onsuccess = event => {\n        var cursor = event.target.result;\n        if (cursor) {\n          let result = iterator(cursor, store.transaction);\n          if (this._limit !== undefined && ++count >= this._limit) result = false;\n          if (result !== false) cursor.continue();\n          else resolve();\n        } else {\n          resolve();\n        }\n      };\n      request.onerror = errorHandler(reject, this);\n    });\n  }\n\n  /**\n   * Updates objects using a cursor to update many objects at once matching the range.\n   * @param  {Function} iterator A function which will be called for each object and which should return the new value\n   * for the object, undefined if no changes should be made, or null if the object should be deleted.\n   * @return {Promise}           Resolves without result when finished\n   */\n  update(iterator) {\n    const { store, revive } = this.store;\n    return this.map((object, cursor, trans) => {\n      let key = cursor.primaryKey;\n      let newValue = iterator(object, cursor);\n      if (newValue === null) {\n        return requestToPromise(cursor.delete(), trans, this).then(() => {\n          this.dispatchChange(null, key);\n        });\n      } else if (newValue !== undefined) {\n        return requestToPromise(cursor.update(this.store.store(newValue)), trans, this).then(() => {\n          this.dispatchChange(newValue, key);\n        });\n      } else {\n        return undefined;\n      }\n    }, 'readwrite').then(promises => Promise.all(promises)).then(() => {});\n  }\n\n  /**\n   * Uses a cursor to efficiently iterate over the objects matching the range calling the iterator for each one.\n   * @param  {Function} iterator A function which will be called for each object with the (object, cursor) signature\n   * @return {Promise}           Resolves without result when the cursor has finished\n   */\n  forEach(iterator, mode = 'readonly') {\n    return this.cursor((cursor, trans) => {\n      iterator(this.store.revive(cursor.value), cursor, trans);\n    }, mode);\n  }\n\n  /**\n   * Uses a cursor to efficiently iterate over the objects matching the range calling the iterator for each one and\n   * returning the results of the iterator in an array.\n   * @param  {Function} iterator A function which will be called for each object with the (object, cursor) signature\n   * @return {Promise}           Resolves with an array which is the return result of each iteration\n   */\n  map(iterator, mode = 'readonly') {\n    let results = [];\n    return this.forEach((object, cursor, trans) => {\n      results.push(iterator(object, cursor, trans));\n    }, mode).then(() => results);\n  }\n}\n\n\n\nfunction requestToPromise(request, transaction, errorDispatcher) {\n  return new Promise((resolve, reject) => {\n    if (transaction) {\n      if (!transaction.promise) transaction.promise = requestToPromise(transaction, null, errorDispatcher);\n      transaction.promise = transaction.promise.then(() => resolve(request.result), err => {\n        let requestError;\n        try { requestError = request.error } catch(e) {}\n        reject(requestError || err);\n        return Promise.reject(err);\n      });\n    } else if (request.onsuccess === null) {\n      request.onsuccess = successHandler(resolve);\n    }\n    if (request.oncomplete === null) request.oncomplete = successHandler(resolve);\n    if (request.onerror === null) request.onerror = errorHandler(reject, errorDispatcher);\n    if (request.onabort === null) request.onabort = () => reject(new Error('Abort'));\n  });\n}\n\nfunction successHandler(resolve) {\n  return event => resolve(event.target.result);\n}\n\nfunction errorHandler(reject, errorDispatcher) {\n  return event => {\n    reject(event.target.error);\n    errorDispatcher && errorDispatcher.dispatchError(event.target.error);\n  };\n}\n\nfunction safariMultiStoreFix(storeNames) {\n  return storeNames.length === 1 ? storeNames[0] : storeNames;\n}\n\n\nfunction upgrade(oldVersion, transaction, db, versionMap, versionHandlers, browserbase) {\n  let versions;\n  // Optimization for creating a new database. A version 0 may be used as the \"latest\" version to create a database.\n  if (oldVersion === 0 && versionMap[0]) {\n    versions = [ 0 ];\n  } else {\n    versions = Object.keys(versionMap)\n      .map(key => parseInt(key))\n      .filter(version => version > oldVersion)\n      .sort((a, b) => a - b);\n  }\n\n  versions.forEach(version => {\n    const stores = versionMap[version];\n    Object.keys(stores).forEach(name => {\n      const indexesString = stores[name];\n      upgradeStore(db, transaction, name, indexesString);\n    });\n\n    const handler = versionHandlers[version];\n    if (handler) {\n      // Ensure browserbase has the current object stores for working with in the handler\n      addStores(browserbase, db, transaction);\n      handler(oldVersion, transaction);\n    }\n  });\n}\n\n\nfunction upgradeStore(db, transaction, storeName, indexesString) {\n  const indexes = indexesString && indexesString.split(/\\s*,\\s*/);\n  let store;\n\n  if (indexesString === null) {\n    db.deleteObjectStore(storeName);\n    return;\n  }\n\n  if (db.objectStoreNames.contains(storeName)) {\n    store = transaction.objectStore(storeName);\n  } else {\n    store = db.createObjectStore(storeName, getStoreOptions(indexes.shift()));\n  }\n\n  indexes.forEach(name => {\n    if (!name) return;\n    if (name[0] === '-') return store.deleteIndex(name.replace(/^-[&*]?/, ''));\n\n    let options = {};\n\n    name = name.replace(/\\s/g, '');\n    if (name[0] === '&') {\n      name = name.slice(1);\n      options.unique = true;\n    } else if (name[0] === '*') {\n      name = name.slice(1);\n      options.multiEntry = true;\n    }\n    let keyPath = name[0] === '[' ? name.replace(/^\\[|\\]$/g, '').split(/\\+/) : name;\n    store.createIndex(name, keyPath, options);\n  });\n}\n\n\nfunction onOpen(browserbase) {\n  const db = browserbase.db;\n\n  db.onversionchange = event => {\n    if (browserbase.dispatchCancelableEvent('versionchange')) {\n      if (event.newVersion > 0) {\n        console.warn(`Another connection wants to upgrade database '${browserbase.name}'. Closing db now to resume the upgrade.`);\n      } else {\n        console.warn(`Another connection wants to delete database '${browserbase.name}'. Closing db now to resume the delete request.`);\n      }\n      browserbase.close();\n    }\n  };\n  db.onblocked = event => {\n    if (browserbase.dispatchCancelableEvent('blocked')) {\n      if (!event.newVersion || event.newVersion < event.oldVersion) {\n        console.warn(`Browserbase.delete('${browserbase.name}') was blocked`);\n      } else {\n        console.warn(`Upgrade '${browserbase.name}' blocked by other connection holding version ${event.oldVersion}`);\n      }\n    }\n  };\n  db.onclose = () => onClose(browserbase);\n  db.onerror = event => browserbase.dispatchEvent('error', event.target.error);\n  if (!browserbase.options.dontDispatch) {\n    browserbase._channel = createChannel(browserbase);\n  }\n\n  // Store keyPath's for each store\n  addStores(browserbase, db, db.transaction(safariMultiStoreFix(db.objectStoreNames), 'readonly'));\n}\n\nfunction createChannel(browserbase) {\n  browserbase._channel = new BroadcastChannel(`browserbase/${browserbase.name}`);\n  browserbase._channel.onmessage = event => {\n    try {\n      const { path, obj } = event.data;\n      const [ storeName, key ] = path.split('/');\n      const store = browserbase[storeName];\n      if (store) {\n        if (browserbase.hasListeners('change') || store.hasListeners('change')) {\n          browserbase.dispatchChange(store, obj, key, 'remote');\n        }\n      } else {\n        console.warn(`A change event came from another tab for store \"${storeName}\", but no such store exists.`);\n      }\n    } catch (err) {\n      console.warn('Error parsing object change from browserbase:', err);\n    }\n  };\n}\n\nfunction postMessage(browserbase, message) {\n  if (!browserbase._channel) return;\n  try {\n    browserbase._channel.postMessage(message);\n  } catch (e) {\n    // If the channel is closed, create a new one and try again\n    if (e.name === 'InvalidStateError') {\n      createChannel();\n      postMessage(browserbase, message);\n    }\n  }\n}\n\n\nfunction addStores(browserbase, db, transaction) {\n  const names = db.objectStoreNames;\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n    browserbase[name] = new ObjectStore(browserbase, name, transaction.objectStore(name).keyPath);\n  }\n}\n\nfunction onClose(browserbase) {\n  if (browserbase._channel) browserbase._channel.close();\n  browserbase._channel = null;\n  browserbase.db = null;\n  browserbase.dispatchEvent('close');\n}\n\nfunction getStoreOptions(keyString) {\n  let keyPath = keyString.replace(/\\s/g, '');\n  let storeOptions = {};\n  if (keyPath.slice(0, 2) === '++') {\n    keyPath = keyPath.replace('++', '');\n    storeOptions.autoIncrement = true;\n  } else if (keyPath[0] === '[') {\n    keyPath = keyPath.replace(/^\\[|\\]$/g, '').split(/\\+/);\n  }\n  if (keyPath) storeOptions.keyPath = keyPath;\n  return storeOptions;\n}\n\nconst chars = ('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz').split('');\n\nfunction createId() {\n  let length = 6;\n  let id = '';\n  while (length--) {\n    id += chars[Math.random() * chars.length | 0];\n  }\n  return id;\n}\n"],"names":[],"mappings":"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"}